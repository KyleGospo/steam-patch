name: Rust Build

on:
  push:
    branches: [ main, beta]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test tags'
        required: false

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üìö Checkout Code
        uses: actions/checkout@v2

      - name: üõ†Ô∏è Set Script Permissions
        run: |
          chmod +x ./install.sh
          chmod +x ./uninstall.sh

      - name: üì¶ Warm up cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: ü¶Ä Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: üèóÔ∏è Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-unknown-linux-gnu

      - name: ‚úÇÔ∏è Strip Debug Symbols
        run: strip -s target/x86_64-unknown-linux-gnu/release/steam-patch

      - name: ‚û°Ô∏è Compress executable with UPX
        run: |
          sudo apt-get install upx
          upx --best target/x86_64-unknown-linux-gnu/release/steam-patch

      - name: üì¶ Upload build
        uses: actions/upload-artifact@v2
        with:
          name: steam-patch
          path: target/x86_64-unknown-linux-gnu/release/steam-patch
      - name: Create Tag
        if: github.ref == 'refs/heads/main'
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d-%H.%M')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: ‚û°Ô∏è Compress executable with UPX
        run: |
          ls -al
          pwd

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: steam-patch
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-gnu/release/steam-patch
          asset_name: steam-patch
          asset_content_type: application/octet-stream
